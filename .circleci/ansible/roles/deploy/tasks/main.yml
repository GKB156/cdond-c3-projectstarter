---
- name: "upgrade packages"
  become: yes
  apt:
    upgrade: "yes"

- name: "update apt packages"
  become: yes
  apt:
    update_cache: yes

- name: "install dependencies"
  become: yes
  apt:
    name: ["nodejs", "npm"]
    state: latest
    update_cache: yes

- name: Creates directory
  file:
    path: /home/ubuntu/backend
    state: directory

- name: unpack backend files
  become: yes
  shell: |
    cd ~/backend
    tar -vxf artifact.tar.gz
    rm -f artifact.tar.gz

- name: Start backend
  become: true
  shell: |
    cd /home/ubuntu/backend
    # start backend app, `watch` if files change (`ignore` file changes in the node_modules).  Restart if 
    # files have change.  Put `time` in logs.  `Name` this process uda-backend
    # need the dash -- before start (at the end of the command) so that pm2 will stop parsing the flags as its own.  Instead the start command
    # will be attached to the npm command (i.e. npm start)
    pm2 start npm --watch --ignore-watch="node_modules" --time --name uda-backend  -- start
    cd dist
    pm2 start main.js --watch --time --name main_app

    # List process that pm2 is running and monitoring
    pm2 ls
    # list the last 20 logs that pm2 has registered
    pm2 logs lines 20 #lists the last 20 logs

  async: 45
  poll: 0
  environment:
    Environment:
      ENVIRONMENT: "{{ lookup('env', 'ENVIRONMENT') }}"
      TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
      TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES') }}"
      TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
      TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
      TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
      TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
      TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"
################################
# - name: create backend directory
#   become: yes
#   file:
#     path: ~/backend
#     state: directory
#     mode: 0755

# - name: copy backend files
#   become: yes
#   copy:
#     src: ~/project/artifact.tar.gz
#     dest: ~/backend/artifact.tar.gz

# - name: unpack backend files
#   become: yes
#   shell: |
#     cd ~/backend
#     tar -vxf artifact.tar.gz
#     rm -f artifact.tar.gz

# - name: "install dependencies."
#   become: true
#   apt:
#     name: ["nodejs", "npm"]
#     state: latest
#     update_cache: yes

# - name: start app
#   become: yes
#   shell: |
#     cd ~/backend
#     npm install
#     pm2 stop default
#     pm2 start npm -- run start
#     cd dist
#     pm2 start main.js --update-env

#################################

##############################
# - name: "upgrade packages."
#   become: true
#   apt:
#     upgrade: "yes"
# #this is causing error, no file or directory: b'apt-get'

# - name: "install dependencies."
#   become: true
#   apt:
#     name: ["nodejs", "npm"]
#     state: latest
#     update_cache: yes
# #this is causing error, no file or directory: b'apt-get'

# - name: "install pm2"
#   become: true
#   npm:
#     name: pm2
#     global: yes
#     production: yes
#     state: present

# - name: create directory
#   become: yes
#   file:
#     path: /home/ubuntu/backend
#     state: directory

# - name: extract artifact
#   become: yes
#   unarchive:
#     src: ~/project/artifact.tar.gz
#     dest: /home/ubuntu

# - name: start app
#   become: yes
#   shell: |
#     cd /home/ubuntu/backend
#     npm install
#     pm2 stop default
#     pm2 start npm -- start
#     # cd dist
#     # pm2 start main.js --update-env
######################################
